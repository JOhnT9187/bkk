# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k5PsqEcJhn_rXEmfZu13OmZIHjmeG0Tz
"""

# =========================================
# üå≥ Streamlit Dashboard: ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø
# =========================================

import streamlit as st
import pandas as pd
import altair as alt

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
st.set_page_config(page_title="‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø", layout="wide")
st.title("üå≥ Top 5 ‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV
@st.cache_data
def load_data():
    df = pd.read_csv("parks_activities.csv")
    df.columns = df.columns.str.strip()
    df["name"] = df["name"].astype(str).str.strip()
    df = df[df["name"].notna()]
    df = df[~df["name"].isin(["‡∏£‡∏ß‡∏°", ""])]
    return df

df = load_data()

# ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
activity_cols = [c for c in df.columns if c not in ["name", "‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°"]]
df["‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"] = df[activity_cols].sum(axis=1)
df["‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°"] = df[["‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°", "‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì"]].max(axis=1).astype(int)

# ---------- ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô ----------
n_parks = df["name"].nunique()  # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
avg_activities = df["‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°"].mean()

colA, colB = st.columns(2)
with colA:
    st.metric("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", f"{n_parks}")
with colB:
    st.metric("‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏™‡∏ß‡∏ô", f"{avg_activities:.1f}")

# ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á Lollipop Chart ----------
top5 = df.sort_values("‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°", ascending=False).head(5)

lollipop = alt.layer(
    alt.Chart(top5).mark_rule(stroke="#43a047", strokeWidth=6).encode(
        y=alt.Y("name:N", sort="-x", title="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏ß‡∏ô"),
        x=alt.X("‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:Q", title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°")
    ),
    alt.Chart(top5).mark_circle(size=250, color="#2e7d32").encode(
        y=alt.Y("name:N", sort="-x"),
        x="‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:Q",
        tooltip=list(top5.columns)
    )
).properties(title="üç≠ ‡∏™‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î (Top 5)", height=350)

st.altair_chart(lollipop, use_container_width=True)

# ---------- ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏ß‡∏ô ----------
st.subheader("üèûÔ∏è ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏ß‡∏ô (Top 5)")

for _, row in top5.iterrows():
    activities = [col for col in activity_cols if row[col] == 1]

    st.markdown(f"""
    <div style="
        background-color: #5DD39E;
        border-radius: 20px;
        padding: 20px;
        margin-bottom: 20px;
        color: black;
        font-family: 'TH Sarabun New', sans-serif;
    ">
        <h4 style="margin-bottom: 10px;"><b>{row['name']}</b></h4>
        <p style="margin-bottom: 5px;">‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°:</p>
        <ul style="margin-top: 0;">
            {''.join([f'<li>{a}</li>' for a in activities])}
        </ul>
        <p style="margin-top: 10px;"><b>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</b> {int(row['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°'])} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
    </div>
    """, unsafe_allow_html=True)
